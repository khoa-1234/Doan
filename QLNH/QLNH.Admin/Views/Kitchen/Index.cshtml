@{
    Layout = null;
}
@model List<QLNH.Data.ViewModels.DonHangViewModel>
<!DOCTYPE html>
<html lang="vi">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="Bảng điều khiển Quản lý Nhà bếp">
    <meta name="author" content="">
    <title>Quản lý Nhà bếp</title>

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- DataTables CSS -->
    <link rel="stylesheet" href="https://cdn.datatables.net/1.11.5/css/jquery.dataTables.min.css">

    <style>
        body {
            background-color: #f0f2f5;
        }

        .navbar {
            background-color: #2d6a4f;
            padding: 15px;
        }

            .navbar a {
                color: white;
                font-weight: bold;
            }

            .navbar .btn-logout {
                background-color: #ff4b5c;
                color: white;
                border: none;
            }

                .navbar .btn-logout:hover {
                    background-color: #e63946;
                }

        .container {
            background-color: #ffffff;
            border-radius: 10px;
            padding: 20px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        }

        h4 {
            color: #333333;
            margin-bottom: 20px;
        }

        .table thead {
            background-color: #2d6a4f;
            color: white;
        }

        .table tbody tr:hover {
            background-color: #f1f3f5;
        }

        .view-detail-btn {
            background-color: #ff9900;
            color: white;
        }

            .view-detail-btn:hover {
                background-color: #ff8000;
            }
    </style>
</head>

<body>
    <!-- Navbar -->
    <nav class="navbar navbar-expand-lg">
        <div class="container-fluid">
            <a class="navbar-brand" href="#">Quản lý Nhà bếp</a>
            <div class="d-flex ms-auto">
                <!-- Nút Đăng Xuất sử dụng form -->
                <form asp-controller="User" asp-action="Logout" method="post" class="d-inline">
                    <button class="btn btn-logout" type="submit">Đăng Xuất</button>
                </form>
            </div>
        </div>
    </nav>

    <div class="container mt-4">
        <h4 class="text-center">Danh sách đơn hàng</h4>
        <div class="table-responsive">
            <table id="order-table" class="table table-bordered table-striped">
                <thead>
                    <tr>
                        <th>Đơn Hàng ID</th>
                        <th>Số Bàn</th>
                        <th>Nhân Viên ID</th>
                        <th>Ngày Đặt</th>
                        <th>Trạng Thái</th>
                        <th>Họ Tên</th>
                        <th>Thao Tác</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var donHang in Model)
                    {
                        <tr>
                            <td>@donHang.DonHangId</td>
                            <td>@donHang.SoBan</td>
                            <td>@donHang.NhanVienId</td>
                            <td>@donHang.NgayDat?.ToString("dd-MM-yyyy")</td>
                            <td>@donHang.TrangThai</td>
                            <td>@donHang.HoTen</td>
                            <td>
                                <button class="btn view-detail-btn"
                                        onclick="updateURL(@donHang.DonHangId); viewOrderDetails(@donHang.DonHangId);">
                                    Xem Chi Tiết
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <!-- Modal to display order details -->
    <div class="modal fade" id="orderDetailsModal" tabindex="-1" role="dialog" aria-labelledby="orderDetailsModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="orderDetailsModalLabel">Chi Tiết Đơn Hàng</h5>
                    <!-- Sử dụng data-bs-dismiss="modal" để đóng modal -->
                    <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <!-- Nội dung chi tiết đơn hàng sẽ được hiển thị ở đây -->
                </div>
                <div class="modal-footer">
                    <!-- Sử dụng data-bs-dismiss="modal" để đóng modal -->
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                </div>
            </div>
        </div>
    </div>


    <!-- jQuery -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <!-- DataTables JS -->
    <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        $(document).ready(function () {
            $('#order-table').DataTable({
                "paging": true,
                "searching": true,
                "ordering": true,
                "info": true,
                "lengthMenu": [5, 10, 15, 20],
                "language": {
                    "search": "Tìm kiếm:",
                    "lengthMenu": "Hiển thị _MENU_ mục",
                    "info": "Hiển thị từ _START_ đến _END_ của _TOTAL_ mục",
                    "paginate": {
                        "first": "Đầu tiên",
                        "last": "Cuối cùng",
                        "next": "Sau",
                        "previous": "Trước"
                    }
                }
            });

            // Sử dụng sự kiện 'hidden.bs.modal' để thay đổi URL sau khi modal đóng hoàn toàn
            $('#orderDetailsModal').on('hidden.bs.modal', function () {
                resetURL();  // Gọi hàm reset URL khi modal đóng
            });
        });
        // Hàm reset URL khi modal đóng
        function resetURL() {
            history.replaceState(null, '', '/Kitchen'); // Reset URL về trang gốc mà không có donHangId
        }

        function getQueryParam(param) {
            const urlParams = new URLSearchParams(window.location.search);
            return urlParams.get(param);
        }

        // Load chi tiết đơn hàng từ URL khi trang được tải
        function loadOrderDetailsFromUrl() {
            const donHangId = getQueryParam('donHangId');
            if (donHangId) {
                viewOrderDetails(donHangId);
            }
        }

        // Gọi hàm này khi trang được tải
        document.addEventListener("DOMContentLoaded", function () {
            loadOrderDetailsFromUrl();
        });

        // Cập nhật URL khi nhấn vào "Xem Chi Tiết"
        function updateURL(donHangId) {
            history.replaceState(null, '', `/Kitchen?donHangId=${donHangId}`);
        }

        // Tải chi tiết đơn hàng và hiển thị modal
        function viewOrderDetails(donHangId) {
            console.log("Received DonHang ID: ", donHangId);

            fetch(`/Kitchen/Details?donHangId=${donHangId}`, {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json',
                }
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {
                    console.log("Fetched order details: ", data);
                    showOrderDetailsModal(data);
                })
                .catch(error => {
                    console.error('Error fetching order details:', error);
                    alert('Unable to fetch order details. Please try again.');
                });
        }

        // Hiển thị chi tiết đơn hàng trong modal
        function showOrderDetailsModal(data) {
            let modalContent = `<h4 class="modal-title text-center">Chi Tiết Đơn Hàng #${data.donHangId}</h4>`;
            modalContent += `<p class="text-center"><strong>Tổng Số Tiền:</strong> ${data.tongTien.toLocaleString()} VND</p>`;
            modalContent += `<h5>Danh Sách Món Ăn:</h5>`;
            modalContent += '<ul class="list-group">';

            data.monAnDaDat.forEach(monAn => {
                modalContent += `
                <li class="list-group-item">
                    <div class="item-info">
                        <strong>${monAn.tenMonAn}</strong> - ${monAn.soLuong} x ${monAn.gia.toLocaleString()} VND
                    </div>
                    <div class="btn-group" role="group" aria-label="Trạng thái món ăn">
                        <button class="btn btn-warning btn-sm btn-custom" onclick="updateStatus('${monAn.monAnId}', 'Đang Làm')">Đang Làm</button>
                        <button class="btn btn-success btn-sm btn-custom" onclick="updateStatus('${monAn.monAnId}', 'Hoàn Thành')">Hoàn Thành</button>
                        <button class="btn btn-danger btn-sm btn-custom" onclick="updateStatus('${monAn.monAnId}', 'Hết Món')">Hết Món</button>
                    </div>
                </li>`;
            });

            modalContent += '</ul>';

            // Hiển thị nội dung modal
            $('#orderDetailsModal .modal-body').html(modalContent);
            $('#orderDetailsModal').modal('show');
        }


        // Hàm cập nhật trạng thái món ăn
        function updateStatus(monAnId, newStatus) {
            console.log(`Món Ăn ID: ${monAnId}, Trạng Thái Mới: ${newStatus}`);

            // Gửi yêu cầu cập nhật trạng thái lên server
            fetch(`/Kitchen/UpdateMonAnStatus`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ monAnId: monAnId, trangThai: newStatus })
            })
                .then(response => response.json())
                .then(data => {
                    alert(`Trạng thái của món ăn đã được cập nhật thành "${newStatus}".`);
                })
                .catch(error => {
                    console.error("Lỗi khi cập nhật trạng thái:", error);
                    alert("Đã xảy ra lỗi khi cập nhật trạng thái.");
                });
        }

    </script>
</body>
<style>
    /* Đảm bảo tất cả các nút nằm trên cùng một hàng */
    .btn-group {
        display: flex;
        justify-content: space-between;
        width: 100%; /* Đảm bảo các nút chiếm toàn bộ chiều rộng */
    }

    /* Khoảng cách giữa các nút */
    .btn-custom {
        margin-left: 5px;
        margin-right: 5px;
        width: 30%; /* Đảm bảo các nút có kích thước bằng nhau */
    }

    /* Điều chỉnh màu sắc cho các trạng thái nút */
    .btn-warning {
        background-color: #ffcc00;
        border-color: #ffcc00;
        color: black;
    }

    .btn-success {
        background-color: #28a745;
        border-color: #28a745;
        color: white;
    }

    .btn-danger {
        background-color: #e63946;
        border-color: #e63946;
        color: white;
    }

    /* Hiệu ứng hover */
    .btn-warning:hover {
        background-color: #e6b800;
    }

    .btn-success:hover {
        background-color: #218838;
    }

    .btn-danger:hover {
        background-color: #cc0000;
    }

    /* Đảm bảo list-group có padding và các món ăn rõ ràng */
    .list-group-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 15px;
        background-color: #f8f9fa;
        border: 1px solid #dee2e6;
    }

        /* Giảm khoảng cách giữa các nút và giữ chúng cùng một hàng */
        .list-group-item + .list-group-item {
            margin-top: 10px;
        }

    /* Đảm bảo văn bản món ăn và nút căn chỉnh đều nhau */
    .item-info {
        flex: 1; /* Đảm bảo phần thông tin món ăn chiếm không gian chính */
    }

    .btn-group {
        flex: 0.5; /* Nhóm nút chiếm một phần nhỏ hơn */
    }
</style>


</html>
